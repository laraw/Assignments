package lms.model;

import java.util.ArrayList;

import lms.model.exception.MultipleBorrowingException;

public class StandardMember extends AbstractMember {

	private static final double MAX_CREDIT = 30.00;
	
	
	public StandardMember() {
		// TODO Auto-generated constructor stub
	}
	
	
	public StandardMember(String standardMemberId, String standardMemberName) {
		super(standardMemberId, standardMemberName);
	}


	public boolean borrowHolding(Holding thisholding) throws MultipleBorrowingException {
		ArrayList<Holding> holdings = new ArrayList<Holding>();
		for (int i=0;i<=holdings.size();i++) {
			if(holdings.get(i).equals(thisholding)) {
				throw new MultipleBorrowingException("Holding already exists in current holdings");
				return false;
			}
			else {
				return true;
			}
		}
		return false;
	};
	
	public double calculateRemainingCredit() {
		return 0;
	};
	
	public double getMaxCredit() {
		return MAX_CREDIT;
	};

	public void resetCredit() {
		credit = MAX_CREDIT;
	
	};
	
	public void returnHolding() {
		
	}
	
	public String toString() {
		return "";
	}


	@Override
	public boolean borrowHolding() {
		// TODO Auto-generated method stub
		return false;
	}
	
	

}
