/** 
 Assignment 1, Programming 2, RMIT University. 
 Author: Lara Wilkinson s3342496
 Date: 04/02/2014

 Description:  The library class is the interface between the member and the libraries collections of holdings.
 The library class refers to both the Library Collection object and the Member object and allows the member
 to interact the library collection object to borrow and return holdings. 
 
**/

package lms.model;

import java.util.*;

import lms.model.exception.*;

public class Library {
	
	private LibraryCollection collection = new LibraryCollection();
	private Member member;
	
	
	public Library() {
	}
	
	
	
	public void addCollection(LibraryCollection collection){
		this.collection = collection;
	}
	
	public boolean addHolding(Holding holding) {
		return collection.addHolding(holding);
	}
	
	public void addMember(Member member) {
		this.member = member;
	}
	
	public void borrowHolding (int holdingId) throws LMSException {
		member.borrowHolding(collection.getHolding(holdingId));
		
	}
	
	public double calculateRemainingCredit() {
		return member.calculateRemainingCredit();
	}
	
	public double calculateTotalLateFees() {
		return member.getBorrowingHistory().calculateTotalLateFees();
	}
	
	public ArrayList<Holding> getAllHoldings () { 
		return collection.getAllHoldings();
		
	}
	
	public ArrayList<Holding> getBorrowedHoldings () {
		return member.getCurrentHoldings();
	}
	
	public LibraryCollection getCollection() {
		return collection;
	}
	
	public HistoryRecord getHistoryRecord(int holdingId) {
		return member.getBorrowingHistory().getHistoryRecord(holdingId);
	}
	
	public Holding getHolding(int code) {
		return collection.getHolding(code);
	}
	
	public Member getMember() {
		return member;
	}
	
	public boolean removeHolding (int code)  {
		return collection.removeHolding(code);
	}
	
	public void resetCredit() {
		member.resetCredit();
	}
	
	public void returnHolding(Holding holding) throws Exception {
		member.returnHolding(holding);
		
	}
	
	
}