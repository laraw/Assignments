package lms.model;

import java.util.ArrayList;
import java.util.Date;

import lms.model.exception.InsufficientCreditException;

public class PremiumMember extends AbstractMember {

	private static final double MAX_CREDIT = 45.00;
			
	public PremiumMember() {
		
	}

	public PremiumMember(String premiumMemberId, String premiumMemberName) {
		super(premiumMemberId, premiumMemberName);
		super(currentCredit) = MAX_CREDIT;
	}

	public boolean borrowHolding(Holding holding) throws InsufficientCreditException  {
		boolean borrowed = true;
		
		if (this.calculateRemainingCredit() < holding.getDefaultLoanFee()) {
			borrowed = false;
			throw new InsufficientCreditException("Member does not have sufficient credit");
			
		}
		else {
			Date currentdate = new Date();
			holding.setBorrowDate(currentdate);
			
			borrowed= true;
		}
		
		return borrowed;
		
	};
	
	public double calculateRemainingCredit() {
		ArrayList<Holding> currentholdings = new ArrayList<>();
		currentholdings = super.getCurrentHoldings();
		
		current
	};
	
	public double getMaxCredit() {
		return MAX_CREDIT;
	};

	public void resetCredit() {
		
	};
	
	public void returnHolding() {
		
	}
	
	public String toString() {
		return "";
	}
}
